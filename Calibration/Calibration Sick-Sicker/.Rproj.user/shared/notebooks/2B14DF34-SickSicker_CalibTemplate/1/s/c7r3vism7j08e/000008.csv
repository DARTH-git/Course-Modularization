"0",""
"0","# Compute posterior mean"
"0","v_calib_post_mean <- colMeans(m_calib_res[,v_param_names])"
"0","v_calib_post_mean"
"1","     p_S1S2 "
"1","      hr_S1 "
"1","      hr_S2 "
"1","
"
"1"," 0.07678456 "
"1"," 3.54642716 "
"1","12.22256104 "
"1","
"
"0","# Compute posterior median and 95% credible interval"
"0","m_calib_res_95cr <- colQuantiles(m_calib_res[,v_param_names], probs = c(0.025, 0.5, 0.975))"
"0","m_calib_res_95cr"
"1","      "
"1","        2.5%"
"1","         50%"
"1","       97.5%"
"1","
p_S1S2"
"1","  0.06936645"
"1","  0.07660834"
"1","  0.08483437"
"1","
hr_S1 "
"1","  2.20770157"
"1","  3.64089475"
"1","  4.44654795"
"1","
hr_S2 "
"1"," 10.35987510"
"1"," 12.09630826"
"1"," 14.45860590"
"1","
"
"0","# Compute maximum-a-posteriori (MAP) parameter set"
"0","v_calib_map <- m_calib_res[which.max(m_calib_res[,""Posterior_prob""]),]"
"0",""
"0",""
"0","### Plot model-predicted output at best set vs targets ###"
"0","v_out_best <- run_sick_sicker_markov(v_calib_map[v_param_names])"
"0",""
"0","# TARGET 1: Survival (""Surv"")"
"0","plotrix::plotCI(x = lst_targets$Surv$time, y = lst_targets$Surv$value, "
"0","                ui = lst_targets$Surv$ub,"
"0","                li = lst_targets$Surv$lb,"
"0","                ylim = c(0, 1), "
"0","                xlab = ""Time"", ylab = ""Pr Survive"")"
