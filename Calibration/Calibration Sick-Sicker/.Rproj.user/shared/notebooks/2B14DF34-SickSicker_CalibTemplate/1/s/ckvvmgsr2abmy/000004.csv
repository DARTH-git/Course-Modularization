"0",""
"0",""
"0","###  PRIOR  ### "
"0","# Write functions to evaluate log-prior and prior"
"0",""
"0","# function that calculates the log-prior"
"0","calc_log_prior <- function(v_params){"
"0","  if(is.null(dim(v_params))) { # If vector, change to matrix"
"0","    v_params <- t(v_params) "
"0","  }"
"0","  n_samp <- nrow(v_params)"
"0","  colnames(v_params) <- v_param_names"
"0","  lprior <- rep(0, n_samp)"
"0","  for (i in 1:n_param){"
"0","    lprior <- lprior + dunif(v_params[, i],"
"0","                             min = lb[i],"
"0","                             max = ub[i], "
"0","                             log = T)"
"0","    # ALTERNATIVE prior using beta distributions"
"0","    # lprior <- lprior + dbeta(v_params[, i],"
"0","    #                          shape1 = 1,"
"0","    #                          shape2 = 1, "
"0","    #                          log = T)"
"0","  }"
"0","  return(lprior)"
"0","}"
"0","calc_log_prior(v_params = v_params_test)"
"1","   p_S1S2 "
"1","
"
"1","-2.841998 "
"1","
"
"0","calc_log_prior(v_params = sample_prior(10))"
"1"," [1]"
"1"," -2.841998"
"1"," -2.841998"
"1"," -2.841998"
"1"," -2.841998"
"1"," -2.841998"
"1"," -2.841998"
"1"," -2.841998"
"1"," -2.841998"
"1"," -2.841998"
"1","
"
"1","[10]"
"1"," -2.841998"
"1","
"
"0","# function that calculates the (non-log) prior"
"0","calc_prior <- function(v_params) { "
"0","  exp(calc_log_prior(v_params)) "
"0","}"
"0","calc_prior(v_params = v_params_test)"
"1","    p_S1S2 "
"1","
"
"1","0.05830904 "
"1","
"
"0","calc_prior(v_params = sample_prior(10))"
"1"," [1]"
"1"," 0.05830904"
"1"," 0.05830904"
"1"," 0.05830904"
"1"," 0.05830904"
"1"," 0.05830904"
"1"," 0.05830904"
"1"," 0.05830904"
"1"," 0.05830904"
"1"," 0.05830904"
"1","
"
"1","[10]"
"1"," 0.05830904"
"1","
"
"0","###  LIKELIHOOD  ###"
"0","# Write functions to evaluate log-likelihood and likelihood"
"0",""
"0","# function to calculate the log-likelihood"
"0","calc_log_lik <- function(v_params){"
"0","  # par_vector: a vector (or matrix) of model parameters "
"0","  if(is.null(dim(v_params))) { # If vector, change to matrix"
"0","    v_params <- t(v_params) "
"0","  }"
"0","  n_samp <- nrow(v_params)"
"0","  v_llik <- matrix(0, nrow = n_samp, ncol = n_target) "
"0","  llik_overall <- numeric(n_samp)"
"0","  for(j in 1:n_samp) { # j=1"
"0","    jj <- tryCatch( { "
"0","      ###   Run model for parametr set ""v_params"" ###"
"0","      model_res <- run_sick_sicker_markov(v_params[j, ])"
"0","      "
"0","      ###  Calculate log-likelihood of model outputs to targets  ###"
"0","      # TARGET 1: Survival (""Surv"")"
"0","      # log likelihood  "
"0","      v_llik[j, 1] <- sum(dnorm(x = lst_targets$Surv$value,"
"0","                                mean = model_res$Surv,"
"0","                                sd = lst_targets$Surv$se,"
"0","                                log = T))"
"0","      "
"0","      # TARGET 2: ""Prev"""
"0","      # log likelihood"
"0","      v_llik[j,2] <- sum(dnorm(x = lst_targets$Prev$value,"
"0","                               mean = model_res$Prev,"
"0","                               sd = lst_targets$Prev$se,"
"0","                               log = T))"
"0","      "
"0","      # TARGET 3: ""PropSick"""
"0","      # log likelihood"
"0","      v_llik[j,3] <- sum(dnorm(x = lst_targets$PropSick$value,"
"0","                               mean = model_res$PropSick,"
"0","                               sd = lst_targets$PropSick$se,"
"0","                               log = T))"
"0","      "
"0","      # OVERALL "
"0","      llik_overall[j] <- sum(v_llik[j, ])"
"0","    }, error = function(e) NA) "
"0","    if(is.na(jj)) { llik_overall <- -Inf }"
"0","  } # End loop over sampled parameter sets"
"0","  # return LLIK"
"0","  return(llik_overall)"
"0","}"
"0","calc_log_lik(v_params = v_params_test)"
"1","[1]"
"1"," 123.0357"
"1","
"
"0","calc_log_lik(v_params = sample_prior(10))"
"1"," [1]"
"1"," -1522.7753"
"1","   137.9478"
"1","  -512.8368"
"1","   109.0752"
"1"," -1069.5349"
"1"," -1915.4212"
"1","  -330.3261"
"1","   146.2897"
"1"," -2594.8935"
"1","
"
"1","[10]"
"1"," -2310.2880"
"1","
"
"0","# function to calculate the (non-log) likelihood"
"0","calc_likelihood <- function(v_params){ "
"0","  exp(calc_log_lik(v_params)) "
"0","}"
"0","calc_likelihood(v_params = v_params_test)"
"1","[1]"
"1"," 2.714834e+53"
"1","
"
"0","calc_likelihood(v_params = sample_prior(10))"
"1"," [1]"
"1"," 5.483878e-148"
"1","  0.000000e+00"
"1","  6.643853e-41"
"1","  1.538133e+54"
"1","  2.234722e-34"
"1"," 1.758230e-251"
"1","  0.000000e+00"
"1","
"
"1"," [8]"
"1","  0.000000e+00"
"1","  0.000000e+00"
"1","  0.000000e+00"
"1","
"
"0","###  POSTERIOR  ###"
"0","# Write functions to evaluate log-posterior and posterior"
"0",""
"0","# function that calculates the log-posterior"
"0","calc_log_post <- function(v_params) { "
"0","  lpost <- calc_log_prior(v_params) + calc_log_lik(v_params)"
"0","  return(lpost) "
"0","}"
"0","calc_log_post(v_params = v_params_test)"
"1","  p_S1S2 "
"1","
"
"1","120.1937 "
"1","
"
"0","calc_log_post(v_params = sample_prior(10))"
"1"," [1]"
"1","  -548.46624"
"1"," -2203.21300"
"1","   131.00197"
"1","   -81.27257"
"1","  -756.98125"
"1","   157.50876"
"1"," -1713.72963"
"1"," -2425.49664"
"1","
"
"1"," [9]"
"1"," -1506.35211"
"1"," -1289.70705"
"1","
"
"0","# function that calculates the (non-log) posterior"
"0","calc_post <- function(v_params) { "
"0","  exp(calc_log_post(v_params)) "
"0","}"
"0","calc_post(v_params = v_params_test)"
"1","      p_S1S2 "
"1","
"
"1","1.582994e+52 "
"1","
"
"0","calc_post(v_params = sample_prior(10))"
"1"," [1]"
"1","  2.699134e-18"
"1","  0.000000e+00"
"1","  1.733333e-60"
"1","  0.000000e+00"
"1"," 1.259442e-101"
"1","  9.863293e+33"
"1","  0.000000e+00"
"1","
"
"1"," [8]"
"1","  0.000000e+00"
"1","  0.000000e+00"
"1"," 1.865798e-252"
"1","
"
