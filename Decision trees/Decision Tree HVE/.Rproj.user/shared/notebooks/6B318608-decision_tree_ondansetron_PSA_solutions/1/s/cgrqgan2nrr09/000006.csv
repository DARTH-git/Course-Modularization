"0","decision_tree_ondansetron_output <- with(as.list(l_params_all), {"
"0","  "
"0","  # Create vector of weights for each strategy "
"0","  # weight per path for the ondasentron arm"
"0","  "
"0","  v_w_on <-  c("
"0","   # emesis with no ADEs"
"0","   p_sem_on * (1 - p_sem_ade_on),      "
"0","   # ADE after emesis that was treated and resolved"
"0","   p_sem_on * p_sem_ade_on * p_sem_ade_trt_on * p_sem_ade_trt_res_on,  "
"0","   # ADE after emesis that was treated and did not resolve"
"0","   p_sem_on * p_sem_ade_on * p_sem_ade_trt_on * (1 - p_sem_ade_trt_res_on),  "
"0","   # ADE after emesis that was not treated and resolved"
"0","   p_sem_on * p_sem_ade_on * (1 - p_sem_ade_trt_on) * p_sem_ade_no_trt_res_on,"
"0","   # ADE after emesis that was not treated and did not resolve"
"0","   p_sem_on * p_sem_ade_on * (1 - p_sem_ade_trt_on) * (1 - p_sem_ade_no_trt_res_on),"
"0","   # no emesis with no ADEs"
"0","   (1 - p_sem_on) * (1 - p_no_sem_ade_on),"
"0","   # ADE after no emesis that was treated and resolved"
"0","   (1 - p_sem_on) * p_no_sem_ade_on * p_no_sem_ade_trt_on * p_no_sem_ade_trt_res_on, "
"0","   # ADE after no emesis that was treated and did not resolve"
"0","   (1 - p_sem_on) * p_no_sem_ade_on * p_no_sem_ade_trt_on * (1 - p_no_sem_ade_trt_res_on),"
"0","   # ADE after no emesis that was not treated and resolved"
"0","   (1 - p_sem_on) * p_no_sem_ade_on * (1 - p_no_sem_ade_trt_on) * p_no_sem_ade_no_trt_res_on, "
"0","   # ADE after no emesis that was not treated and did not resolve"
"0","   (1 - p_sem_on) * p_no_sem_ade_on * (1 - p_no_sem_ade_trt_on) * "
"0","   (1 - p_no_sem_ade_no_trt_res_on))   "
"0","  "
"0","  # weight per path for the metoclopramide arm"
"0","  "
"0","  v_w_met <-  c("
"0","   # emesis with no ADEs"
"0","   p_sem_met * (1 - p_sem_ade_met),      "
"0","   # ADE after emesis that was treated and resolved"
"0","   p_sem_met * p_sem_ade_met * p_sem_ade_trt_met * p_sem_ade_trt_res_met,  "
"0","   # ADE after emesis that was treated and did not resolve"
"0","   p_sem_met * p_sem_ade_met * p_sem_ade_trt_met * (1 - p_sem_ade_trt_res_met),  "
"0","   # ADE after emesis that was not treated and resolved"
"0","   p_sem_met * p_sem_ade_met * (1 - p_sem_ade_trt_met) * p_sem_ade_no_trt_res_met,"
"0","   # ADE after emesis that was not treated and did not resolve"
"0","   p_sem_met * p_sem_ade_met * (1 - p_sem_ade_trt_met) * (1 - p_sem_ade_no_trt_res_met),"
"0","   # no emesis with no ADEs"
"0","   (1 - p_sem_met) * (1 - p_no_sem_ade_met),"
"0","   # ADE after no emesis that was treated and resolved"
"0","   (1 - p_sem_met) * p_no_sem_ade_met * p_no_sem_ade_trt_met * p_no_sem_ade_trt_res_met, "
"0","   # ADE after no emesis that was treated and did not resolve"
"0","   (1 - p_sem_met) * p_no_sem_ade_met * p_no_sem_ade_trt_met * (1 - p_no_sem_ade_trt_res_met),"
"0","   # ADE after no emesis that was not treated and resolved"
"0","   (1 - p_sem_met) * p_no_sem_ade_met * (1 - p_no_sem_ade_trt_met) * p_no_sem_ade_no_trt_res_met, "
"0","   # ADE after no emesis that was not treated and did not resolve"
"0","   (1 - p_sem_met) * p_no_sem_ade_met * (1 - p_no_sem_ade_trt_met) * "
"0","   (1 - p_no_sem_ade_no_trt_res_met))   "
"0","  "
"0","  # Create vector of costs for each strategy "
"0"," "
"0","  # Estimating cost per path for the ondasentron arm"
"0","  v_c_on <-                 "
"0","    c(c_trt_on + c_sem_on,"
"0","      c_trt_on + c_sem_on + c_ade_on + c_ade_trt_on,"
"0","      c_trt_on + c_sem_on + c_ade_on + c_ade_trt_on, "
"0","      c_trt_on + c_sem_on + c_ade_on,"
"0","      c_trt_on + c_sem_on + c_ade_on,"
"0","      c_trt_on,"
"0","      c_trt_on + c_ade_on + c_ade_trt_on,"
"0","      c_trt_on + c_ade_on + c_ade_trt_on, "
"0","      c_trt_on + c_ade_on,"
"0","      c_trt_on + c_ade_on)  "
"0","  "
"0","  # Estimating cost per path for the metoclopramide arm"
"0","  v_c_met <-              "
"0","    c(c_trt_met + c_sem_met,"
"0","      c_trt_met + c_sem_met + c_ade_met + c_ade_trt_met,"
"0","      c_trt_met + c_sem_met + c_ade_met + c_ade_trt_met, "
"0","      c_trt_met + c_sem_met + c_ade_met,"
"0","      c_trt_met + c_sem_met + c_ade_met,"
"0","      c_trt_met,"
"0","      c_trt_met + c_ade_met + c_ade_trt_met,"
"0","      c_trt_met + c_ade_met + c_ade_trt_met, "
"0","      c_trt_met + c_ade_met,"
"0","      c_trt_met + c_ade_met) "
"0","  "
"0","  # Create vector of utilities for each strategy "
"0","  # vector of health outcomes for both therapies for each path"
"0","  v_e_on  <- v_e_met <- c(0, "
"0","                          0,"
"0","                          0,"
"0","                          0, "
"0","                          0, "
"0","                          1,"
"0","                          0,"
"0","                          0, "
"0","                          0,"
"0","                          0) "
"0","  "
"0","  # Calculate total costs for each strategy "
"0","  tc_on   <- v_w_on   %*%  v_c_on      "
"0","  tc_met  <- v_w_met  %*%  v_c_met"
"0","  "
"0","  # Calculate total utilities for each strategy "
"0","  te_on   <- v_w_on   %*%  v_e_on      "
"0","  te_met  <- v_w_met  %*%  v_e_met"
"0","  "
"0","  v_tc    <- c(tc_on, tc_met)   # vector of total costs"
"0","  v_te    <- c(te_on, te_met)   # vector of total life years"
"0","  v_nmb   <- v_te * wtp - v_tc  # calculate vector of nmb"
"0","  "
"0","  # Name outcomes"
"0","  names(v_tc)  <- v_names_str   # names for the elements of the  tc  vector"
"0","  names(v_te)  <- v_names_str   # names for the elements of the  te vector"
"0","  names(v_nmb) <- v_names_str   # names for the elements of the nmb vector"
"0","  "
"0","  df_output <- data.frame(Strategy        =  v_names_str,"
"0","                          Cost            =  v_tc,"
"0","                          Effectiveness   =  v_te,"
"0","                          NMB             =  v_nmb)"
"0","  return(df_output) "
"0","})"
"0",""
"0","# model output"
"0","decision_tree_ondansetron_output"
