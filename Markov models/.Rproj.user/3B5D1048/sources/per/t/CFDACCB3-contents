################# Simple 3-state Markov model in R ####################################
################# with age dependency AND          ####################################
################# with time dependency             ####################################

# Developed by the Decision Analysis in R for Technologies in Health (DARTH) workgroup
# Fernando Alarid-Escudero, PhD (1) 
# Eva A. Enns, MS, PhD (2)	
# M.G. Myriam Hunink, MD, PhD (3,4)
# Hawre J. Jalal, MD, PhD (5) 
# Eline M. Krijkamp, MSc (3)	
# Petros Pechlivanoglou, PhD (6) 

# In collaboration of: 		
# 1 Drug Policy Program, Center for Research and Teaching in Economics (CIDE) - CONACyT, 
#   Aguascalientes, Mexico
# 2 University of Minnesota School of Public Health, Minneapolis, MN, USA
# 3 Erasmus MC, Rotterdam, The Netherlands
# 4 Harvard T.H. Chan School of Public Health, Boston, USA
# 5 University of Pittsburgh Graduate School of Public Health, Pittsburgh, PA, USA
# 6 The Hospital for Sick Children, Toronto and University of Toronto, Toronto ON, Canada

#####################################################################################
# Please cite our publications when using this code
# - Jalal H, Pechlivanoglou P, Krijkamp E, Alarid-Escudero F, Enns E, Hunink MG. 
# An Overview of R in Health Decision Sciences. Med Decis Making. 2017; 37(3): 735-746. 
# https://journals.sagepub.com/doi/abs/10.1177/0272989X16686559
# - Krijkamp EM, Alarid-Escudero F, Enns EA, Jalal HJ, Hunink MGM, Pechlivanoglou P. 
# Microsimulation modeling for health decision sciences using R: A tutorial. 
# Med Decis Making. 2018;38(3):400â€“22. 
# https://journals.sagepub.com/doi/abs/10.1177/0272989X18754513
# - Krijkamp EM, Alarid-Escudero F, Enns E, Pechlivanoglou P, Hunink MM, Jalal H. 
# A Multidimensional Array Representation of State-Transition Model Dynamics. 
# BioRxiv 670612 2019.https://www.biorxiv.org/content/10.1101/670612v1

#####################################################################################
# Copyright 2017, THE HOSPITAL FOR SICK CHILDREN AND THE COLLABORATING INSTITUTIONS. 
# All rights reserved in Canada, the United States and worldwide. Copyright, 
# trademarks, trade names and any and all associated intellectual property are 
# exclusively owned by THE HOSPITAL FOR Sick CHILDREN and the collaborating 
# institutions. These materials may be used, reproduced, modified, distributed 
# and adapted with proper attribution.
#####################################################################################

rm(list = ls())      # clear memory (removes all the variables from the workspace)

#### 01 Load packages ####
# no packages required
# library(dampack)

#### 02 Load Functions ####
# no functions required

#### 03 Input Model Parameters ####
## Strategy names
v_names_str <- c("Base Case")  
## Number of strategies
n_str <- length(v_names_str)
## Markov model parameters
v_n  <- c("Healthy", "Sick", "Dead")    # state names
n_s  <- length(v_n)                     # number of states
n_t  <- 60                              # number of cycles

# Update!
###
# Tunnels
tunnel_size <- n_t
# Sick state
Sick_tunnel <- paste("Sick_", seq(1, tunnel_size), "Yr", sep = "")
# Create variables for time-dependent model
v_n_td  <- c("Healthy", Sick_tunnel, "Dead")   # state names
n_s_td  <- length(v_n_td)                      # number of states
###

p_HD <- seq(0.003, 0.01, length.out = n_t)  # probability to die when sick (age-dependent)
p_HS <- 0.05                    # probability to become sick when healthy

# Update!
###
# Weibull parameters
l <- 0.08
g <- 1.1
p_SD <- l*g*(1:tunnel_size)^{g-1}         # probability to die when sick (time-dependent)
###

# Costs and utilities  
c_H  <- 400         # cost of remaining one cycle healthy
c_S  <- 100         # cost of remaining one cycle sick
c_D  <- 0           # cost of remaining one cycle dead
u_H  <- 0.8         # utility when healthy 
u_S  <- 0.5         # utility when sick
u_D  <- 0           # utility when dead
d_c <- d_e <- 0.03  # discount rate per cycle, same for costs and effectiveness
v_dwc <- 1 / (1 + d_c) ^ (0:n_t) # calculate discount weights for costs for each cycle based on discount rate d_c
v_dwe <- 1 / (1 + d_e) ^ (0:n_t) # calculate discount weights for effectiveness for each cycle based on discount rate d_e

#### 04 Define and initialize matrices and vectors ####
#### 04.1 Cohort trace ####
# create the cohort trace
m_M <- matrix(NA, 
              nrow = n_t + 1 ,                # create Markov trace (n_t + 1 because R doesn't understand  Cycle 0)
              ncol = n_s_td,                  # Update!
              dimnames = list(0:n_t, v_n_td)) # Update!
# Update!
####
# The cohort starts as healthy
m_M[1, ] <- c(1, rep(0, tunnel_size), 0)      # initialize first cycle of Markov trace accounting for the tunnels
####

#### 04.2 Transition probability ARRAY ####
# create the transition probability array
a_P <- array(0,                                          # Create 3-D array
             dim = c(n_s_td, n_s_td, n_t),               # Update!
             dimnames = list(v_n_td, v_n_td, 0:(n_t-1))) # Update! 

# fill in the transition probability array
### From Healthy
a_P["Healthy", "Healthy", ]  <- 1 - p_HD - p_HS
a_P["Healthy", "Sick_1Yr", ] <- p_HS
a_P["Healthy", "Dead", ]     <- p_HD

# Update!
###
### From Sick
for(i in 1:(tunnel_size - 1)){ # i <- 1
  a_P[Sick_tunnel[i], Sick_tunnel[i + 1], ] <- 1 - p_SD[i]
  a_P[Sick_tunnel[i], "Dead", ] <- p_SD[i]
}
a_P[Sick_tunnel[tunnel_size], Sick_tunnel[tunnel_size], ] <- 1 - p_SD[tunnel_size]
a_P[Sick_tunnel[tunnel_size], "Dead", ] <- p_SD[tunnel_size]
###

### From Dead
a_P["Dead", "Dead", ] <- 1

# Check if transition matrix is valid (i.e., each row should add up to 1)
valid <- apply(a_P, 3, function(x) sum(rowSums(x))==n_s_td)
if (!isTRUE(all.equal(as.numeric(sum(valid)), as.numeric(n_t)))) {
  stop("This is not a valid transition Matrix")
}

####### PROCESS  ###########################################
# Run Markov model
for (t in 1:n_t) {                        # loop through the number of cycles
  m_M[t + 1, ] <- m_M[t, ] %*% a_P[, , t] # estimate the Markov trace for cycle t + 1 using the t-th matrix from the probability array 
}
head(m_M, n = 30)

# create aggregated trace
m_M_td <- cbind(Healthy = m_M[, "Healthy"], 
                Sick = rowSums(m_M[, 2:(tunnel_size +1)]), 
                Dead = m_M[, "Dead"])
head(m_M_td)

#### 06 Compute and Plot Epidemiological Outcomes ####
#### 06.1 Cohort trace #####
matplot(m_M_td, type = 'l', 
        ylab = "Probability of state occupancy",
        xlab = "Cycle",
        main = "Cohort Trace")              # create a plot of the data
legend("right", v_n, col = c("black", "red", "green"), lty = 1:3, bty = "n")  # add a legend to the graph

#### 06.2 Overall Survival (OS) #####
v_os <- 1 - m_M_td[, "Dead"]    # calculate the overall survival (OS) probability
v_os <- rowSums(m_M_td[, 1:2])  # alternative way of calculating the OS probability   

plot(v_os, type = 'l', 
     ylim = c(0, 1),
     ylab = "Survival probability",
     xlab = "Cycle",
     main = "Overall Survival")             # create a simple plot showing the OS
grid(nx = n_t, ny = 10, col = "lightgray", lty = "dotted", lwd = par("lwd"), equilogs = TRUE) # add grid 

#### 06.2.1 Life Expectancy (LE) #####
v_le <- sum(v_os)                             # summing probablity of OS over time  (i.e. life expectancy)

#### 06.3 Disease prevalence #####
v_prev <- m_M_td[, "Sick"]/v_os
plot(v_prev,
     ylim = c(0, 1),
     ylab = "Prevalence",
     xlab = "Cycle",
     main = "Disease prevalence")

#### 07 Compute Cost-Effectiveness Outcomes ####
#### 07.1 Mean Costs and QALYs ####
# per cycle
v_tc <- m_M_td %*% c(c_H, c_S, c_D)  # calculate expected costs by multiplying m_M with the cost vector for the different health states   
v_tu <- m_M_td %*% c(u_H, u_S, u_D)  # calculate expected QALYs by multiplying m_M with the utilities for the different health states   

#### 07.2 Discounted Mean Costs and QALYs ####
v_tc_d <-  t(v_tc) %*% v_dwc   # Discount costs  by multiplying the cost vector with discount weights (v_dw) 
v_te_d <-  t(v_tu) %*% v_dwe   # Discount QALYS  by multiplying the QALYs vector with discount weights (v_dw)

results <- data.frame("Total Discounted Cost" = v_tc_d, 
                      "Life Expectancy" = v_le, 
                      "Total Discounted QALYs" = v_te_d, 
                      check.names = F)
results
