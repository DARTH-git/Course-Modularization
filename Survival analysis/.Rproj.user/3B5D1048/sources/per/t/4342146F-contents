#####################################################################################
##################          Markov Sick-Sicker model in R          ##################
#####################################################################################

# Developed by the Decision Analysis in R for Technologies in Health (DARTH) workgroup
# Fernando Alarid-Escudero, PhD (1) 
# Eva A. Enns, MS, PhD (2)	
# M.G. Myriam Hunink, MD, PhD (3,4)
# Hawre J. Jalal, MD, PhD (5) 
# Eline M. Krijkamp, MSc (3)	
# Petros Pechlivanoglou, PhD (6) 

# In collaboration of: 		
# 1 Drug Policy Program, Center for Research and Teaching in Economics (CIDE) - CONACyT, 
#   Aguascalientes, Mexico
# 2 University of Minnesota School of Public Health, Minneapolis, MN, USA
# 3 Erasmus MC, Rotterdam, The Netherlands
# 4 Harvard T.H. Chan School of Public Health, Boston, USA
# 5 University of Pittsburgh Graduate School of Public Health, Pittsburgh, PA, USA
# 6 The Hospital for Sick Children, Toronto and University of Toronto, Toronto ON, Canada

#####################################################################################
# Please cite our publications when using this code
# - Jalal H, Pechlivanoglou P, Krijkamp E, Alarid-Escudero F, Enns E, Hunink MG. 
# An Overview of R in Health Decision Sciences. Med Decis Making. 2017; 37(3): 735-746. 
# https://journals.sagepub.com/doi/abs/10.1177/0272989X16686559
# - Krijkamp EM, Alarid-Escudero F, Enns EA, Jalal HJ, Hunink MGM, Pechlivanoglou P. 
# Microsimulation modeling for health decision sciences using R: A tutorial. 
# Med Decis Making. 2018;38(3):400â€“22. 
# https://journals.sagepub.com/doi/abs/10.1177/0272989X18754513
# - Krijkamp EM, Alarid-Escudero F, Enns E, Pechlivanoglou P, Hunink MM, Jalal H. 
# A Multidimensional Array Representation of State-Transition Model Dynamics. 
# BioRxiv 670612 2019.https://www.biorxiv.org/content/10.1101/670612v1
#
#####################################################################################
# Copyright 2017, THE HOSPITAL FOR SICK CHILDREN AND THE COLLABORATING INSTITUTIONS. 
# All rights reserved in Canada, the United States and worldwide. Copyright, 
# trademarks, trade names and any and all associated intellectual property are 
# exclusively owned by THE HOSPITAL FOR Sick CHILDREN and the collaborating 
# institutions. These materials may be used, reproduced, modified, distributed 
# and adapted with proper attribution.
#####################################################################################


# rm(list = ls())   # clear memory (removes all the variables from the workspace)
# setwd(dirname(rstudioapi::getActiveDocumentContext()$path)) # set working directory 

#### 00 Install and load packages ####
### Uncomment if you don't have all required packages installed
# source("app0_packages_setup.R", echo = TRUE) 

devtools::install_github("DARTH-git/dampack")
#### 01 Load packages ####
library(ggplot2)
library(dampack)
library(dplyr)
library(scales)
library(ellipse)
library(truncnorm)
library(reshape2)


#### 02 Load Functions ####
# no function to load


#### 03 Input Model Parameters ####
### Strategy names
v_names_str <- c("No Treatment", "Treatment")  
### Number of strategies
n_str   <- length(v_names_str)
### Markov model parameters
age     <- 25                       # age at baseline
max_age <- 55                       # maximum age of follow up
n_t     <- max_age - age            # time horizon, number of cycles
v_n     <- c("H", "S1", "S2", "D")  # the 4 states of the model: Healthy (H), Sick (S1), Sicker (S2), Dead (D)
n_s     <- length(v_n)              # number of health states 

# Transition probabilities (per cycle)
p_HD    <- 0.005                    # probability to die when healthy
p_HS1   <- 0.15          	          # probability to become sick when healthy
p_S1H   <- 0.5           	          # probability to become healthy when sick
p_S1S2  <- 0.105         	          # probability to become sicker when sick
hr_S1   <- 3             	          # hazard ratio of death in sick vs healthy
hr_S2   <- 10            	          # hazard ratio of death in sicker vs healthy 
r_HD    <- - log(1 - p_HD)          # rate of death in healthy
r_S1D   <- hr_S1 * r_HD  	          # rate of death in sick
r_S2D   <- hr_S2 * r_HD  	          # rate of death in sicker
p_S1D   <- 1 - exp(-r_S1D)          # probability to die in sick
p_S2D   <- 1 - exp(-r_S2D)          # probability to die in sicker

# Cost and utility inputs 
c_H     <- 2000                     # cost of remaining one cycle in the healthy state
c_S1    <- 4000                     # cost of remaining one cycle in the sick state
c_S2    <- 15000                    # cost of remaining one cycle in the sicker state
c_trt   <- 12000                    # cost of treatment(per cycle)
c_D     <- 0                        # cost of being in the death state
u_H     <- 1                        # utility when healthy
u_S1    <- 0.75                     # utility when sick
u_S2    <- 0.5                      # utility when sicker
u_D     <- 0                        # utility when dead
u_trt   <- 0.95                     # utility when being treated

# Discounting factor
d_r <- 0.03                         # equal discount of costs and QALYs by 3%
v_dwc <- 1 / (1 + d_r) ^ (0:n_t)    # calculate discount weights for costs for each cycle based on discount rate d_r
v_dwe <- 1 / (1 + d_r) ^ (0:n_t)    # calculate discount weights for effectiveness for each cycle based on discount rate d_r


#### 04 Define and initialize matrices and vectors ####
#### 04.1 Cohort trace ####
### create the markov trace matrix M capturing the proportion of the cohort in each state at each cycle
m_M_no_trt <- m_M_trt <- matrix(NA, 
                                nrow     = n_t + 1, ncol = n_s,
                                dimnames = list(paste("cycle", 0:n_t, sep = " "), v_n))

head(m_M_no_trt) # show first 6 rows of the matrix 

# The cohort starts as healthy
m_M_no_trt[1, ] <- m_M_trt[1, ] <- c(1, 0, 0, 0) # initiate first cycle of cohort trace 

#### 04.2 Transition probability matrix ####
### create the transition probability matrix for NO treatment
m_P_notrt  <- matrix(0,
                     nrow = n_s,
                     ncol = n_s,
                     dimnames = list(v_n, v_n)) # name the columns and rows of the transition probability matrix
m_P_notrt

### fill in the transition probability array
# From Healthy
m_P_notrt["H", "H"]   <- 1 - (p_HS1 + p_HD)
m_P_notrt["H", "S1"]  <- p_HS1
m_P_notrt["H", "D"]   <- p_HD
# From Sick
m_P_notrt["S1", "H"]  <- p_S1H
m_P_notrt["S1", "S1"] <- 1 - (p_S1H + p_S1S2 + p_S1D)
m_P_notrt["S1", "S2"] <- p_S1S2
m_P_notrt["S1", "D"]  <- p_S1D
# From Sicker
m_P_notrt["S2", "S2"] <- 1 - p_S2D
m_P_notrt["S2", "D"]  <- p_S2D
# From Dead
m_P_notrt["D", "D"]   <- 1

### check rows add up to 1
rowSums(m_P_notrt)

### create transition probability matrix for treatment same as no treatment
m_P_trt <- m_P_notrt


#### 05 Run Markov model ####
for (t in 1:n_t){                                          # loop through the number of cycles
  m_M_no_trt[t + 1, ] <- t(m_M_no_trt[t, ]) %*% m_P_notrt  # estimate the Markov trace for cycle the next cycle (t + 1)
  m_M_trt[t + 1, ]    <- t(m_M_trt[t, ])    %*% m_P_trt    # estimate the Markov trace for cycle the next cycle (t + 1)
} # close the loop

head(m_M_no_trt)  # show the first 6 lines of the matrix


#### 06 Compute and Plot Epidemiological Outcomes ####
#### 06.1 Cohort trace #####
png("figs/markov_sick-sicker_cohort_trace.png", width=600, height=600)
matplot(m_M_no_trt, type = 'l', 
        ylab = "Probability of state occupancy",
        xlab = "Cycle",
        main = "Cohort Trace")             # create a plot of the data
legend("topright", v_n, col = 1:n_s,lty = 1:n_s, bty = "n")  # add a legend to the graph
dev.off()

#### 06.2 Overall Survival (OS) #####
v_os_no_trt <- 1 - m_M_no_trt[, "D"]       # calculate the overall survival (OS) probability for no treatment
v_os_no_trt <- rowSums(m_M_no_trt[, 1:3])  # alternative way of calculating the OS probability   
png("figs/markov_sick-sicker_time_overall_survival.png", width=600, height=600)
plot(0:n_t, v_os_no_trt, type = 'l', 
     ylim = c(0, 1),
     ylab = "Survival probability",
     xlab = "Cycle",
     main = "Overall Survival")            # create a simple plot showing the OS
grid(nx = n_t, ny = 10, col = "lightgray", lty = "dotted", lwd = par("lwd"), equilogs = TRUE) # add grid 
dev.off()

#### 06.2.1 Life Expectancy (LE) #####
v_le <- sum(v_os_no_trt)                   # summing probablity of OS over time  (i.e. life expectancy)

#### 06.3 Disease prevalence #####
v_prev <- rowSums(m_M_no_trt[, c("S1", "S2")]) / v_os_no_trt
png("figs/markov_sick-sicker_disease_prevalence.png", width=600, height=600)
plot(v_prev,
     ylim = c(0, 1),
     ylab = "Prevalence",
     xlab = "Cycle",
     main = "Disease prevalence")
dev.off()

#### 06.4 Proportion of sick in S1 state #####
v_prop_S1 <- m_M_no_trt[, "S1"] / v_prev
png("figs/markov_sick-sicker_prop_sick.png", width=600, height=600)
plot(0:n_t, v_prop_S1,
     xlab = "Cycle", 
     ylab = "Proportion", 
     main = "Proportion of sick in S1 state", 
     col  = "black", type = "l")
dev.off()


#### 07 Compute Cost-Effectiveness Outcomes ####
### Vectors with costs and utilities by treatment
v_u_no_trt  <- c(u_H, u_S1, u_S2, u_D)
v_u_trt     <- c(u_H, u_trt, u_S2, u_D)

v_c_no_trt  <- c(c_H, c_S1, c_S2, c_D)
v_c_trt     <- c(c_H, c_S1 + c_trt, c_S2 + c_trt, c_D)

#### 07.1 Mean Costs and QALYs for Treatment and NO Treatment ####
### estimate mean QALys and costs
v_tu_no_trt <- m_M_no_trt     %*% v_u_no_trt
v_tu_trt    <- m_M_trt        %*% v_u_trt

v_tc_no_trt <- m_M_no_trt     %*% v_c_no_trt
v_tc_trt    <- m_M_trt        %*% v_c_trt

#### 07.2 Discounted Mean Costs and QALYs ####
### discount costs and QALYs
tu_d_no_trt <- t(v_tu_no_trt) %*% v_dwe    # 1x31 %*% 31x1 -> 1x1
tu_d_trt    <- t(v_tu_trt)    %*% v_dwe

tc_d_no_trt <- t(v_tc_no_trt) %*% v_dwc
tc_d_trt    <- t(v_tc_trt)    %*% v_dwc

# Vector
v_tc_d      <- c(tc_d_no_trt, tc_d_trt)
v_tu_d      <- c(tu_d_no_trt, tu_d_trt)

# Dataframe with discounted costs and effectiveness
df_ce       <- data.frame(Strategy = v_names_str,
                          Cost     = v_tc_d,
                          Effect   = v_tu_d)
df_ce

#### 07.3 Compute ICERs of the Markov model ####
m_cea       <- calculate_icers(cost       = df_ce$Cost,
                               effect     = df_ce$Effect,
                               strategies = df_ce$Strategy)
m_cea

#### 07.4 Plot frontier of the Markov model ####
png("figs/markov_sick-sicker_CEA_frontier.png", width=600, height=600)
plot(m_cea, effect_units = "Quality of Life", xlim=c(15.6,16.6))
dev.off()
