"0","MicroSim <- function(n_i,  seed = 1) {"
"0","  # Arguments:  "
"0","  # n_i:     number of individuals"
"0","  # seed:    default is 1"
"0","  "
"0","  set.seed(seed) # set the seed"
"0","  "
"0","  # m_M is used to store the health state information over time for every individual"
"0","  times     <- seq(0, n_t, c_l)  # the cycles in years"
"0","  "
"0","  m_M  <-  matrix(nrow = n_i, ncol = length(times) , "
"0","                  dimnames = list(paste(""ind"" , 1:n_i, sep = "" ""), "
"0","                                  paste(""year"", times, sep = "" "")))  "
"0",""
"0","  m_M[, 1] <- v_M_init           # initial health state for individual i"
"0","  v_Ts     <- v_Ts_init          # initialize time since illness onset for individual i"
"0","  "
"0","  # open a loop for time running cycles 1 to n_t "
"0","  for (t in 1:(length(times)-1)) {"
"0","    # calculate the transition probabilities for the cycle based on health state t"
"0","    m_p <- Probs(m_M[, t], v_Ts, t)  "
"0","    # sample the current health state and store that state in matrix m_M "
"0","    m_M[, t + 1]  <- samplev(m_p, 1) "
"0","    "
"0","    # update time since illness onset for t + 1 "
"0","    v_Ts <- ifelse(m_M[, t + 1] == ""sick"", v_Ts + 1, 0) "
"0","    "
"0","    # Display simulation progress"
"0","    if(t %in% seq(1,(length(times)),10)) { # display progress every 10%"
"0","      cat('\r', paste(round(t/length(times)*100,0), ""% done"", sep = "" ""))"
"0","    } else if (t == (length(times)-1)) {cat('\r', paste(""100% done""))}"
"0","      "
"0","  } # close the loop for the time points "
"0","  "
"0","  # store the results from the simulation in a list"
"0","  results <- list(m_M = m_M)   "
"0","  "
"0","  return(results)  # return the results"
"0",""
"0","} # end of the MicroSim function  "
"0",""
"0","# Run the simulation model"
"0","Micro_data <- MicroSim(n_i, seed = 1)"
"1",""
"1"," "
"1","0 % done"
"1",""
"1"," "
"1","2 % done"
"1",""
"1"," "
"1","4 % done"
"1",""
"1"," "
"1","6 % done"
"1",""
"1"," "
"1","9 % done"
"1",""
"1"," "
"1","11 % done"
"1",""
"1"," "
"1","13 % done"
"1",""
"1"," "
"1","15 % done"
"1",""
"1"," "
"1","17 % done"
"1",""
"1"," "
"1","19 % done"
"1",""
"1"," "
"1","21 % done"
"1",""
"1"," "
"1","23 % done"
"1",""
"1"," "
"1","25 % done"
"1",""
"1"," "
"1","27 % done"
"1",""
"1"," "
"1","29 % done"
"1",""
"1"," "
"1","31 % done"
"1",""
"1"," "
"1","33 % done"
"1",""
"1"," "
"1","36 % done"
"1",""
"1"," "
"1","38 % done"
"1",""
"1"," "
"1","40 % done"
"1",""
"1"," "
"1","42 % done"
"1",""
"1"," "
"1","44 % done"
"1",""
"1"," "
"1","46 % done"
"1",""
"1"," "
"1","48 % done"
"1",""
"1"," "
"1","50 % done"
"1",""
"1"," "
"1","52 % done"
"1",""
"1"," "
"1","54 % done"
"1",""
"1"," "
"1","56 % done"
"1",""
"1"," "
"1","58 % done"
"1",""
"1"," "
"1","60 % done"
"1",""
"1"," "
"1","63 % done"
"1",""
"1"," "
"1","65 % done"
"1",""
"1"," "
"1","67 % done"
"1",""
"1"," "
"1","69 % done"
"1",""
"1"," "
"1","71 % done"
"1",""
"1"," "
"1","73 % done"
"1",""
"1"," "
"1","75 % done"
"1",""
"1"," "
"1","77 % done"
"1",""
"1"," "
"1","79 % done"
"1",""
"1"," "
"1","81 % done"
"1",""
"1"," "
"1","83 % done"
"1",""
"1"," "
"1","85 % done"
"1",""
"1"," "
"1","88 % done"
"1",""
"1"," "
"1","90 % done"
"1",""
"1"," "
"1","92 % done"
"1",""
"1"," "
"1","94 % done"
"1",""
"1"," "
"1","96 % done"
"1",""
"1"," "
"1","98 % done"
"1",""
"1"," "
"1","100% done"
"0","# create the microsimulation trace"
"0","m_M_Micro <- t(apply(Micro_data$m_M, 2, function(x) table(factor(x, levels = v_n, "
"0","                                                                 ordered = TRUE)))) "
"0","m_M_Micro <- m_M_Micro / n_i    # calculate the proportion of individuals "
"0","colnames(m_M_Micro) <- v_n      "
"0","rownames(m_M_Micro) <- paste(""Cycle"", times, sep = "" "")  "
