"0","# Find optimal strategy (d*) based on the highest expected NMB"
"0","d_star <- which.max(colMeans(nmb))"
"0","d_star"
"1","Strategy B "
"1","
"
"1","         2 "
"1","
"
"0","# Compute Loss matrix iterating over all strategies"
"0","# Initialize loss matrix of dimension: number of simulation by number of strategies"
"0","loss <- matrix(0, n_sim, n_strategies)"
"0","for (d in 1:n_strategies){ # d <- 1"
"0","  loss[, d] <- nmb[, d] - nmb[, d_star]"
"0","}"
"0","head(loss)"
"1","    "
"1","       [,1]"
"1"," [,2]"
"1","        [,3]"
"1","
[1,]"
"1","  -3727.713"
"1","    0"
"1","   -953.4139"
"1","
[2,]"
"1","  -1608.355"
"1","    0"
"1","    276.6166"
"1","
[3,]"
"1","  21574.683"
"1","    0"
"1","  -3345.1873"
"1","
[4,]"
"1","  32212.210"
"1","    0"
"1","   2337.8737"
"1","
[5,]"
"1","  17864.411"
"1","    0"
"1","   8466.6869"
"1","
[6,]"
"1"," -25717.410"
"1","    0"
"1"," -21012.2516"
"1","
"
"0","# Or without iterating (much faster!)"
"0","loss <- as.matrix(nmb - nmb[, d_star])"
"0","head(loss)"
"1","    "
"1"," Strategy A"
"1"," Strategy B"
"1","  Strategy C"
"1","
[1,]"
"1","  -3727.713"
"1","          0"
"1","   -953.4139"
"1","
[2,]"
"1","  -1608.355"
"1","          0"
"1","    276.6166"
"1","
[3,]"
"1","  21574.683"
"1","          0"
"1","  -3345.1873"
"1","
[4,]"
"1","  32212.210"
"1","          0"
"1","   2337.8737"
"1","
[5,]"
"1","  17864.411"
"1","          0"
"1","   8466.6869"
"1","
[6,]"
"1"," -25717.410"
"1","          0"
"1"," -21012.2516"
"1","
"
