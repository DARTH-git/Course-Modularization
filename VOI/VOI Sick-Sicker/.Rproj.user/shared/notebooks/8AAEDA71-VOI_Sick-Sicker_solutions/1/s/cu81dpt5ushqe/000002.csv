"0","# Splines"
"0","# Initialize EVPPI vector "
"0","evppi_splines <- matrix(0, n_params)"
"0","lmm1 <- vector(""list"", n_params)"
"0","lmm2 <- vector(""list"", n_params)"
"0","for (p in 1:n_params){ # p <- 1"
"0","  print(paste(""Computing EVPPI of parameter"", names_params[p]))"
"0","  # Estimate Splines"
"0","  lmm1[[p]] <- gam(loss[, 1] ~ s(x[, p]))"
"0","  lmm2[[p]] <- gam(loss[, 2] ~ s(x[, p]))"
"0","  "
"0","  # Predict Loss using Splines"
"0","  Lhat_splines <- cbind(lmm1[[p]]$fitted, lmm2[[p]]$fitted)"
"0","  "
"0","  # Compute EVPPI"
"0","  evppi_splines[p] <- mean(rowMaxs(Lhat_splines))"
"0","}"
"1","[1]"
"1"," ""Computing EVPPI of parameter p.HS1"""
"1","
"
"1","[1]"
"1"," ""Computing EVPPI of parameter p.S1H"""
"1","
"
"1","[1]"
"1"," ""Computing EVPPI of parameter p.S1S2"""
"1","
"
"1","[1]"
"1"," ""Computing EVPPI of parameter p.HD"""
"1","
"
"1","[1]"
"1"," ""Computing EVPPI of parameter rr.S1"""
"1","
"
"1","[1]"
"1"," ""Computing EVPPI of parameter rr.S2"""
"1","
"
"1","[1]"
"1"," ""Computing EVPPI of parameter c.H"""
"1","
"
"1","[1]"
"1"," ""Computing EVPPI of parameter c.S1"""
"1","
"
"1","[1]"
"1"," ""Computing EVPPI of parameter c.S2"""
"1","
"
"1","[1]"
"1"," ""Computing EVPPI of parameter c.Trt"""
"1","
"
"1","[1]"
"1"," ""Computing EVPPI of parameter u.H"""
"1","
"
"1","[1]"
"1"," ""Computing EVPPI of parameter u.S1"""
"1","
"
"1","[1]"
"1"," ""Computing EVPPI of parameter u.S2"""
"1","
"
"1","[1]"
"1"," ""Computing EVPPI of parameter u.Trt"""
"1","
"
"0","# Ploting EVPPI using of order polynomial"
"0","evppi_splines_gg <- data.frame(Parameter = names_params, EVPPI = evppi_splines)"
"0","evppi_splines_gg$Parameter <- factor((evppi_splines_gg$Parameter), "
"0","                                     levels = names_params[order(evppi_splines_gg$EVPPI, "
"0","                                                                 decreasing = TRUE)])"
"0",""
"0","# Plot EVPPI using ggplot2 package"
"0","ggplot(data = evppi_splines_gg, aes(x = Parameter, y = EVPPI)) +"
"0","  geom_bar(stat = ""identity"") +"
"0","  ylab(""EVPPI ($)"") +"
"0","  scale_y_continuous(breaks = number_ticks(6), labels = comma) +"
"0","  theme_bw(base_size = 14)"
